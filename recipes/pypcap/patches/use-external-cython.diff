diff --git a/pcap_ex.c b/pcap_ex.c
index 81fd6a9..423c856 100644
--- a/pcap_ex.c
+++ b/pcap_ex.c
@@ -13,13 +13,14 @@
 # include <unistd.h>
 #endif
 
+#include "config.h"
+
 #include <pcap.h>
 #ifdef HAVE_PCAP_INT_H
 # include <pcap-int.h>
 #endif
 #include "pcap_ex.h"
 
-#include "config.h"
 
 /* XXX - hack around older Python versions */
 #include "patchlevel.h"
diff --git a/setup.py b/setup.py
index 4776731..4f20336 100644
--- a/setup.py
+++ b/setup.py
@@ -5,7 +5,7 @@
 from __future__ import with_statement
 from distutils.core import setup, Extension
 from distutils.command import config, clean
-from Pyrex.Distutils import build_ext
+from distutils.command.build_ext import build_ext
 import cPickle
 import glob
 import os
@@ -58,7 +58,7 @@ class config_pcap(config.config):
         except IOError:
             print "No pcap-int.h found"
 
-        pcap_h_file = open(os.path.join(include_dir, 'pcap.h')).readlines()
+        pcap_h_file = open(os.path.join(include_dir, 'pcap/pcap.h')).readlines()
         for line in pcap_h_file:
             if 'pcap_file(' in line:
                 print "found pcap_file function"
@@ -128,7 +128,7 @@ class config_pcap(config.config):
 
     def run(self):
         #config.log.set_verbosity(0)
-        cPickle.dump(self._pcap_config([self.with_pcap]),
+        cPickle.dump(self.pcap_config([self.with_pcap]),
                      open(pcap_cache, 'wb'))
         self.temp_files.append(pcap_cache)
 
@@ -149,7 +149,7 @@ if len(sys.argv) > 1 and sys.argv[1] == 'build':
 
 pcap = Extension(
     name='pcap',
-    sources=['pcap.pyx', 'pcap_ex.c'],
+    sources=['pcap.c', 'pcap_ex.c'],
     include_dirs=pcap_config.get('include_dirs', ''),
     library_dirs=pcap_config.get('library_dirs', ''),
     libraries=pcap_config.get('libraries', ''),
